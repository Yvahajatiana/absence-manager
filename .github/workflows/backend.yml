name: Backend CI/CD

on:
  push:
    branches: [ master, main, develop ]
    paths:
      - 'absence-backend/**'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/backend.yml'
  pull_request:
    branches: [ master, main, develop ]
    paths:
      - 'absence-backend/**'
      - 'package.json'
      - 'package-lock.json'

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        
    services:
      sqlite:
        image: keinos/sqlite3:latest
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install backend dependencies
      run: npm ci
      working-directory: ./absence-backend
      
    - name: Run linting
      run: npm run lint
      working-directory: ./absence-backend
      
    - name: Run tests
      run: npm test
      working-directory: ./absence-backend
      env:
        NODE_ENV: test
        DB_STORAGE: ':memory:'
        
    - name: Run database migrations
      run: npm run migrate
      working-directory: ./absence-backend
      env:
        NODE_ENV: test
        DB_STORAGE: './test.db'
        
    - name: Build application
      run: npm run build
      working-directory: ./absence-backend
      
    - name: Start application (health check)
      run: |
        npm run start &
        sleep 10
        curl -f http://localhost:3000/health || exit 1
        pkill -f "node"
      working-directory: ./absence-backend
      env:
        NODE_ENV: production
        PORT: 3000
        DB_STORAGE: './health-check.db'

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install backend dependencies
      run: npm ci
      working-directory: ./absence-backend
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      working-directory: ./absence-backend
      
    - name: Check for outdated packages
      run: npm outdated || true
      working-directory: ./absence-backend

  docker:
    runs-on: ubuntu-latest
    needs: [test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      run: |
        docker build -t absence-backend:test .
        docker run --rm -d -p 3000:3000 --name test-backend absence-backend:test
        sleep 10
        curl -f http://localhost:3000/health || exit 1
        docker stop test-backend
      working-directory: ./absence-backend

  deploy:
    runs-on: ubuntu-latest
    needs: [test, security, docker]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to staging
      run: |
        echo "ðŸš€ Deploying backend to staging environment"
        echo "Backend deployment would happen here"
        # Add your deployment commands here
        
    - name: Notify deployment
      run: |
        echo "âœ… Backend deployed successfully to staging"
        # Add notification logic here (Slack, Discord, email, etc.)