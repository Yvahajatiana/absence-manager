name: Client CI/CD

on:
  push:
    branches: [ master, main, develop ]
    paths:
      - 'absence-client/**'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/client.yml'
  pull_request:
    branches: [ master, main, develop ]
    paths:
      - 'absence-client/**'
      - 'package.json'
      - 'package-lock.json'

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install client dependencies
      run: npm ci
      working-directory: ./absence-client
      
    - name: Run linting
      run: npm run lint
      working-directory: ./absence-client
      
    - name: Run TypeScript type checking
      run: npm run build
      working-directory: ./absence-client
      
    - name: Run tests
      run: npm test
      working-directory: ./absence-client
      env:
        NODE_ENV: test
        
    - name: Test NestJS application startup
      run: |
        npm run start &
        sleep 10
        curl -f http://localhost:3003 || exit 1
        pkill -f "node"
      working-directory: ./absence-client
      env:
        NODE_ENV: test
        PORT: 3003
        API_BASE_URL: http://localhost:3000/api

  integration:
    runs-on: ubuntu-latest
    needs: [test]
    
    services:
      backend:
        image: node:20-alpine
        ports:
          - 3000:3000
        env:
          NODE_ENV: test
          DB_STORAGE: ':memory:'
          
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Start backend service
      run: |
        cd absence-backend
        npm ci
        npm run start &
        sleep 10
      env:
        NODE_ENV: test
        PORT: 3000
        DB_STORAGE: './integration-test.db'
        
    - name: Install client dependencies
      run: npm ci
      working-directory: ./absence-client
      
    - name: Start client application
      run: |
        npm run start &
        sleep 10
      working-directory: ./absence-client
      env:
        NODE_ENV: test
        PORT: 3003
        API_BASE_URL: http://localhost:3000/api
        
    - name: Run integration tests
      run: |
        echo "üß™ Running integration tests"
        # Test client can reach backend
        curl -f http://localhost:3000/health || exit 1
        # Test client application is running
        curl -f http://localhost:3003 || exit 1
        # Test client can submit form (basic smoke test)
        curl -X GET http://localhost:3003/declaration || exit 1
        echo "‚úÖ Integration tests passed"

  template-validation:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install client dependencies
      run: npm ci
      working-directory: ./absence-client
      
    - name: Validate Handlebars templates
      run: |
        echo "üîç Validating Handlebars templates"
        # Check all templates exist
        test -f views/layout.hbs
        test -f views/index.hbs
        test -f views/declaration.hbs
        test -f views/success.hbs
        test -f views/error.hbs
        test -f views/confirmation.hbs
        # Check CSS file exists
        test -f public/css/styles.css
        echo "‚úÖ Template validation passed"
      working-directory: ./absence-client

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install client dependencies
      run: npm ci
      working-directory: ./absence-client
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      working-directory: ./absence-client
      
    - name: Check for outdated packages
      run: npm outdated || true
      working-directory: ./absence-client

  accessibility:
    runs-on: ubuntu-latest
    needs: [test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install client dependencies
      run: npm ci
      working-directory: ./absence-client
      
    - name: Start application
      run: |
        npm run start &
        sleep 10
      working-directory: ./absence-client
      env:
        NODE_ENV: test
        PORT: 3003
        
    - name: Install axe-core CLI
      run: npm install -g @axe-core/cli
      
    - name: Run accessibility tests
      run: |
        echo "‚ôø Running accessibility tests"
        axe http://localhost:3003 --timeout 30000 || echo "Accessibility issues found - review needed"
        axe http://localhost:3003/declaration --timeout 30000 || echo "Accessibility issues found - review needed"
        echo "‚úÖ Accessibility tests completed"

  docker:
    runs-on: ubuntu-latest
    needs: [test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      run: |
        docker build -t absence-client:test .
        docker run --rm -d -p 3003:3003 --name test-client absence-client:test
        sleep 15
        curl -f http://localhost:3003 || exit 1
        docker stop test-client
      working-directory: ./absence-client

  deploy:
    runs-on: ubuntu-latest
    needs: [test, integration, template-validation, security, accessibility, docker]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies and build
      run: |
        npm ci
        npm ci
        npm run build
      working-directory: ./absence-client
      
    - name: Deploy to staging
      run: |
        echo "üöÄ Deploying client to staging environment"
        echo "Client NestJS SSR deployment would happen here"
        # Add your deployment commands here (PM2, Docker, Kubernetes, etc.)
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: client-build
        path: ./absence-client/dist/
        retention-days: 30
        
    - name: Notify deployment
      run: |
        echo "‚úÖ Client deployed successfully to staging"
        # Add notification logic here (Slack, Discord, email, etc.)